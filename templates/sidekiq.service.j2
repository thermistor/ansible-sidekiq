#jinja2: trim_blocks: False
# {{ ansible_managed }}
#
# systemd unit file
#
# Customize this file based on your bundler location, app directory, etc.
# Put this in /usr/lib/systemd/system (CentOS) or /lib/systemd/system (Ubuntu).
# Run:
#   - systemctl enable sidekiq
#   - systemctl {start,stop,restart} sidekiq
#
# This file corresponds to a single Sidekiq process.  Add multiple copies
# to run multiple processes (sidekiq-1, sidekiq-2, etc).
#
# See Inspeqtor's Systemd wiki page for more detail about Systemd:
# https://github.com/mperham/inspeqtor/wiki/Systemd
#
[Unit]
Description=sidekiq{% if sidekiq_instance %}_{{sidekiq_instance}}{% endif %}
# start us only once the network, logging subsystems, and redis are available,
After=syslog.target network.target redis.service

# See these pages for lots of options:
# http://0pointer.de/public/systemd-man/systemd.service.html
# http://0pointer.de/public/systemd-man/systemd.exec.html
[Service]
Type=simple
WorkingDirectory={{ sidekiq_dir }}
ExecStart={{ sidekiq_dir }}/bin/bundle exec sidekiq -e {{ sidekiq_env }}{% for q in sidekiq_queues %}{{ " -q %s"|format(q) }}{% endfor %}
User={{ sidekiq_user }}
Group={{ sidekiq_user }}
UMask=0002

# if we crash, restart
RestartSec=1
Restart=on-failure

# log to our own file
StandardOutput=append:/var/log/sidekiq/sidekiq{% if sidekiq_instance %}_{{sidekiq_instance}}{% endif %}.log
StandardError=append:/var/log/sidekiq/sidekiq{% if sidekiq_instance %}_{{sidekiq_instance}}{% endif %}.log

# Can view logs with 'journalctl -u sidekiq' or log files
SyslogIdentifier=sidekiq{% if sidekiq_instance %}_{{sidekiq_instance}}{% endif %}

[Install]
WantedBy=multi-user.target
